<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://cskuracha.github.io//TheDataLearning/</id><title>The Data Learning</title><subtitle>Learn Python, Machine Learning and AI Concepts</subtitle> <updated>2022-03-11T02:10:48+08:00</updated> <author> <name>Chaitanya Sagar Kuracha</name> <uri>https://cskuracha.github.io//TheDataLearning/</uri> </author><link rel="self" type="application/atom+xml" href="https://cskuracha.github.io//TheDataLearning/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://cskuracha.github.io//TheDataLearning/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Chaitanya Sagar Kuracha </rights> <icon>/TheDataLearning/assets/img/favicons/favicon.ico</icon> <logo>/TheDataLearning/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Creating a Python Environment</title><link href="https://cskuracha.github.io//TheDataLearning/posts/Creating-Python-Environment/" rel="alternate" type="text/html" title="Creating a Python Environment" /><published>2022-03-10T23:25:00+08:00</published> <updated>2022-03-11T02:02:30+08:00</updated> <id>https://cskuracha.github.io//TheDataLearning/posts/Creating-Python-Environment/</id> <content src="https://cskuracha.github.io//TheDataLearning/posts/Creating-Python-Environment/" /> <author> <name>{"name"=>"Chaitanya Sagar Kuracha", "link"=>"https://github.com/cskuracha"}</name> </author> <category term="Tutorial" /> <category term="Python" /> <category term="Machine Learning" /> <summary> In this article, we will try to lean about creating virtual environment in Python. Creating Virtual Environment Creating a virtual environment in Python is easy task. Before creating a virtual environment, make sure pip is installed and updated. pip install virtualenv Use below command in Command Prompt to create the virtual environment: virtualenv NameOfTheVirtualEnvironment Once the envir... </summary> </entry> <entry><title>Adding Virtual Environment to Jupyter Notebook</title><link href="https://cskuracha.github.io//TheDataLearning/posts/Adding-Virtual-environment-to-Jupyter-notebook/" rel="alternate" type="text/html" title="Adding Virtual Environment to Jupyter Notebook" /><published>2022-03-10T23:25:00+08:00</published> <updated>2022-03-11T02:02:30+08:00</updated> <id>https://cskuracha.github.io//TheDataLearning/posts/Adding-Virtual-environment-to-Jupyter-notebook/</id> <content src="https://cskuracha.github.io//TheDataLearning/posts/Adding-Virtual-environment-to-Jupyter-notebook/" /> <author> <name>{"name"=>"Chaitanya Sagar Kuracha", "link"=>"https://github.com/cskuracha"}</name> </author> <category term="Tutorial" /> <category term="Python" /> <category term="Machine Learning" /> <summary> Adding a new virtual environment to Jupyter Notebook After we create a virtual environment, we need to add the created virtual environment to Jupyter notebook. Make sure you have activated the virtual environment and execute below code: pip install --user ipykernel Manually add the kernel / virtual environment to the Jupyter notebook: python -m ipykernel install --user --na... </summary> </entry> <entry><title>Neural Networks - History</title><link href="https://cskuracha.github.io//TheDataLearning/posts/Neural-Networks-History/" rel="alternate" type="text/html" title="Neural Networks - History" /><published>2021-04-08T23:25:00+08:00</published> <updated>2022-03-11T02:02:30+08:00</updated> <id>https://cskuracha.github.io//TheDataLearning/posts/Neural-Networks-History/</id> <content src="https://cskuracha.github.io//TheDataLearning/posts/Neural-Networks-History/" /> <author> <name>{"name"=>"Chaitanya Sagar Kuracha", "link"=>"https://github.com/cskuracha"}</name> </author> <category term="Tutorial" /> <category term="Machine Learning" /> <summary> In this article, I want to give brief introduction to Neural Networks. First Neural Network was designed by Frank Rosenblatt in 1957 and is called perceptron. Concept is loosely inspired from Biological neurons. Concepts of Neural networks are loosely inspired from Biological neurons (Biological neurons are more complicated). (Image from https://en.wikipedia.org/wiki/Artificial_neuron#... </summary> </entry> <entry><title>Biological Neurons</title><link href="https://cskuracha.github.io//TheDataLearning/posts/Biological-Neurons/" rel="alternate" type="text/html" title="Biological Neurons" /><published>2021-04-08T23:25:00+08:00</published> <updated>2022-03-11T02:02:30+08:00</updated> <id>https://cskuracha.github.io//TheDataLearning/posts/Biological-Neurons/</id> <content src="https://cskuracha.github.io//TheDataLearning/posts/Biological-Neurons/" /> <author> <name>{"name"=>"Chaitanya Sagar Kuracha", "link"=>"https://github.com/cskuracha"}</name> </author> <category term="Tutorial" /> <category term="Machine Learning" /> <summary> In this article, we will look into how Biological Neurons work and how it is different from Artificial Neurons When we observe a single neuron, some dendrites will be of more thickness than other dendrites. This allows to pass more impulses to nucleus than other dendrites. Once we have enough impulses from dendrites then neurons sends the output to axioms, else neurons will not be activa... </summary> </entry> <entry><title>Distance Measures</title><link href="https://cskuracha.github.io//TheDataLearning/posts/Distance-Measures/" rel="alternate" type="text/html" title="Distance Measures" /><published>2021-04-04T23:25:00+08:00</published> <updated>2022-03-11T02:02:30+08:00</updated> <id>https://cskuracha.github.io//TheDataLearning/posts/Distance-Measures/</id> <content src="https://cskuracha.github.io//TheDataLearning/posts/Distance-Measures/" /> <author> <name>{"name"=>"Chaitanya Sagar Kuracha", "link"=>"https://github.com/cskuracha"}</name> </author> <category term="Tutorial" /> <category term="Machine Learning" /> <summary> In this article, we will look into different distance measures we will use in Machine Learning. 1. Euclidean Distance (L2): Euclidean Distance is most frequently used distance measure. If we observe the above picture, variable ‘d’ is called the Euclidean distance (L2). It is called the shortest distance from X1 to X2. In above picture, we have two features, f1 and f2 and two datapoint... </summary> </entry> </feed>
